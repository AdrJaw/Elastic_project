# Cluster Health Check

## Overall Cluster Health
GET /_cat/health


## Node Health
GET /_cat/nodes


## List Indices
GET /_cat/indices


## Create 'sales' Index
PUT /sales

--result
{
  "acknowledged": true,
  "shards_acknowledged": true,
  "index": "sales"
}

## Add 'order' to 'sales' index
PUT /sales/_doc/123
{
  "orderID":"123",
  "orderAmount":"500"
}

--result
{
  "_index": "sales",
  "_id": "123",
  "_version": 1,
  "result": "created",
  "_shards": {
    "total": 2,
    "successful": 2,
    "failed": 0
  },
  "_seq_no": 0,
  "_primary_term": 1
}

## Retrieve document
GET /sales/_doc/123

--result
{
  "_index": "sales",
  "_id": "123",
  "_version": 1,
  "_seq_no": 0,
  "_primary_term": 1,
  "found": true,
  "_source": {
    "orderID": "123",
    "orderAmount": "500"
  }
}

## Delete index
DELETE /sales

--result
{
  "acknowledged": true
}


----------------------------------------------------------- UX/Linux shell code to insert data ---------------------------------------------------------------
ES_HOST=""

# now create API key
# click on security then in settings "kibana" link
# scroll down to API Keys then "Create API Key"
# create variable in terminal

ES_API_KEY=""

# Create File with Requests (make sure to include new line at end of file)
# open VI and create a file called "reqs"
vi reqs


## reqs is the name of the file
# hit esc
# type :wq to save the file and exit vi
# type ls to see the file is there

# using curl, upload data file to cluster and create index

curl -XPOST -i -k \
-H "Content-Type: application/x-ndjson" \
-H "Authorization: ApiKey $ES_API_KEY" \
$ES_HOST/_bulk --data-binary "@reqs"; echo      

